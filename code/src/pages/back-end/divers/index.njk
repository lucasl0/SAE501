{% extends "layouts/back-end/base.njk" %}
{% set active_menu_item = "divers" %}

{% block title %}Divers
{% endblock %}



{% block main %}
    <div class="bg-white rounded-2xl shadow-md pb-6">
        <header class="mb-1 p-6 flex justify-between gap-2 lg:flex-row flex-col">
            <div>
                {% include "components/back-end/breadcrumb.njk" %}
                <h2 class="text-4xl">Modifier la Date des Journées Portes Ouvertes</h2>
            </div>
        </header>
<div class="px-6">
      <form id="jpo-form">
 <label class="block mb-4"  for="jpo-date">
                    <span class="font-bold text-slate-700 after:content-['*'] after:ml-0.5 after:text-red-500">Nouvelle Date :</span>
                    <input class="block bg-white w-full border border-slate-300 rounded-md py-2 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm"
                           type="date" id="jpo-date" name="date" value="{{ jpoData.jpo[0].date }}" required />
                </label>

                <label class="block mb-4"  for="jpo-time">
                    <span class="font-bold text-slate-700 after:content-['*'] after:ml-0.5 after:text-red-500">Nouvelle Heure :</span>
                    <input class="block bg-white w-full border border-slate-300 rounded-md py-2 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm"
                          type="text" id="jpo-time" name="time" value="{{ jpoData.jpo[0].time }}" required />
                </label>

   <div class="flex gap-x-3 gap-y-5 flex-col sm:flex-row">
                    <button class="px-4 py-2 font-semibold text-sm bg-blue-700 hover:bg-blue-950 text-white rounded-2xl shadow-sm inline-flex gap-1 items-center justify-center"
                            type="submit">
                        Sauvegarder
                    </button>
                    </div>
                </div>
 
</form>

<p id="message"></p>
</div>
<script>
    document.getElementById("jpo-form").addEventListener("submit", async function(event) {
        event.preventDefault();
        const formData = new FormData(this);
        const jsonData = Object.fromEntries(formData.entries());

        console.log(" Données envoyées :", jsonData);

        try {
            const response = await fetch("/admin/divers", {  
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(jsonData)
            });

            const result = await response.json();
            console.log("Réponse du serveur :", result); 

            const messageElement = document.getElementById("message");
            if (result.success) {
                messageElement.textContent = result.message;
                messageElement.style.color = "green";

                // echarge la page pour voir les changements
                setTimeout(() => {
                    location.reload();
                }, 1000);
            } else {
                messageElement.textContent = result.message;
                messageElement.style.color = "red";
            }
        } catch (error) {
            console.error(" Erreur lors de la requête :", error);
            document.getElementById("message").textContent = "Erreur de connexion au serveur.";
            document.getElementById("message").style.color = "red";
        }
    });
</script>


{% endblock %}
